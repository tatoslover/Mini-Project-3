{
  "openapi": "3.0.0",
  "info": {
    "title": "Barkend API",
    "version": "1.0.0",
    "description": "üêï **REST API Documentation** - Complete backend system with dual data sources: external breed information and internal CRUD operations.\n\n**üìä Two Distinct Data Systems:**\n\n**1. Breed Info API (External Data):**\n- Sources data from Dog CEO API (https://dog.ceo/api)\n- Cached in MongoDB Atlas for performance\n- Read-only operations\n- Provides breed lists, images, and breed information\n- Endpoints: `/breeds`, `/breeds-popular`, `/random`, `/search`\n\n**2. CRUD Operations (Internal Database):**\n- Your own MongoDB Atlas database\n- Full Create, Read, Update, Delete operations\n- Sequential IDs (1, 2, 3, etc.)\n- Manage your own dog records\n- Endpoints: `/dogs`, `/dogs/{id}`\n\n**Backend Architecture:**\n- MongoDB Atlas cloud database\n- Serverless Netlify Functions\n- External API integration with caching\n- Real-time analytics and statistics\n\n[View raw JSON](swagger/swagger.json)"
  },
  "servers": [
    {
      "url": "/.netlify/functions",
      "description": "Netlify Functions"
    }
  ],
  "paths": {
    "/health": {
      "get": {
        "summary": "Health Check",
        "description": "Returns the health status of the API server and MongoDB Atlas database connection",
        "tags": ["System"],
        "responses": {
          "200": {
            "description": "Server is healthy",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HealthResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/stats": {
      "get": {
        "summary": "System Statistics",
        "description": "Returns comprehensive system metrics and performance statistics",
        "tags": ["System"],
        "responses": {
          "200": {
            "description": "System statistics",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/cache-status": {
      "get": {
        "summary": "Cache Status",
        "description": "Returns cache performance metrics and storage information",
        "tags": ["System"],
        "responses": {
          "200": {
            "description": "Cache status information",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CacheStatusResponse"
                }
              }
            }
          }
        }
      }
    },
    "/all": {
      "get": {
        "summary": "Get All Breed Data",
        "description": "Retrieves comprehensive breed data from Dog CEO API.",
        "tags": ["Breed Info"],
        "responses": {
          "200": {
            "description": "Complete breed data with all information",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AllBreedsResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/breeds": {
      "get": {
        "summary": "Get All Breeds",
        "description": "Get simple list of all breed names",
        "tags": ["Breed Info"],
        "responses": {
          "200": {
            "description": "Simple array of breed names",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SimpleBreedsResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },

    "/random": {
      "get": {
        "summary": "Get Breed Images",
        "description": "Get images for a specific breed",
        "tags": ["Breed Info"],
        "parameters": [
          {
            "name": "breed",
            "in": "query",
            "description": "The breed name (required)",
            "required": true,
            "schema": {
              "type": "string",
              "example": "labrador"
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "Number of images to return",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 20,
              "default": 3
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Breed images",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BreedImagesResponse"
                }
              }
            }
          },
          "400": {
            "description": "Missing breed parameter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "404": {
            "description": "Breed not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/search": {
      "get": {
        "summary": "Search Breeds",
        "description": "üåê **External API Data** - Search for dog breeds by name with relevance scoring from cached external breed data. This is READ-ONLY search of Dog CEO API breed information.",
        "tags": ["Breed Info"],
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "description": "Search query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 50,
              "default": 10
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Sort results by",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["relevance", "name", "popularity"],
              "default": "relevance"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Search results",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid search query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/dogs": {
      "get": {
        "summary": "Get All Dogs",
        "description": "Retrieve all dogs",
        "tags": ["CRUD Operations"],
        "responses": {
          "200": {
            "description": "List of all dogs",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DogsResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create New Dog",
        "description": "Create a new dog",
        "tags": ["CRUD Operations"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDogRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Dog created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DogResponse"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/dogs/{id}": {
      "get": {
        "summary": "Get Dog by ID",
        "description": "Retrieve a specific dog by its ID.",
        "tags": ["CRUD Operations"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Dog ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Dog details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DogResponse"
                }
              }
            }
          },
          "404": {
            "description": "Dog not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update Dog",
        "description": "Update a specific dog's information.",
        "tags": ["CRUD Operations"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Dog ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDogRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Dog updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DogResponse"
                }
              }
            }
          },
          "404": {
            "description": "Dog not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Dog",
        "description": "Delete a specific dog's information.",
        "tags": ["CRUD Operations"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Dog ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Dog deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "404": {
            "description": "Dog not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "HealthResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "status": {
            "type": "string",
            "example": "healthy"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "database": {
            "type": "string",
            "example": "connected"
          },
          "uptime": {
            "type": "number",
            "example": 3600
          }
        }
      },
      "StatsResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "data": {
            "type": "object",
            "properties": {
              "imagesServed": {
                "type": "integer",
                "example": 15427
              },
              "breedsViewed": {
                "type": "integer",
                "example": 172
              },
              "apiRequests": {
                "type": "integer",
                "example": 8945
              },
              "averageResponseTime": {
                "type": "number",
                "example": 245.6
              }
            }
          }
        }
      },
      "BreedsResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "count": {
            "type": "integer",
            "example": 172
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "example": "affenpinscher"
                },
                "name": {
                  "type": "string",
                  "example": "affenpinscher"
                },
                "breed": {
                  "type": "string",
                  "example": "affenpinscher"
                },
                "displayName": {
                  "type": "string",
                  "example": "Affenpinscher"
                },
                "subBreed": {
                  "type": "string",
                  "nullable": true,
                  "example": null
                },
                "imageCount": {
                  "type": "integer",
                  "example": 15
                }
              }
            }
          }
        }
      },
      "SimpleBreedsResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "count": {
            "type": "integer",
            "example": 162
          },
          "breeds": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "Affenpinscher",
              "African",
              "Airedale",
              "Akita",
              "Appenzeller",
              "Australian Kelpie",
              "Australian Shepherd",
              "Bakharwal Indian",
              "Basenji",
              "Beagle",
              "Bluetick",
              "Borzoi",
              "Bouvier",
              "Boxer",
              "Brabancon",
              "Briard",
              "Buhund Norwegian",
              "Bulldog Boston",
              "Bulldog English",
              "Bulldog French",
              "Bullterrier Staffordshire",
              "Cattledog Australian",
              "Cavapoo",
              "Chihuahua",
              "Chippiparai Indian",
              "Chow",
              "Clumber",
              "Cockapoo",
              "Collie Border",
              "Coonhound",
              "Corgi Cardigan",
              "Cotondetulear",
              "Dachshund",
              "Dalmatian",
              "Dane Great",
              "Danish Swedish",
              "Deerhound Scottish",
              "Dhole",
              "Dingo",
              "Doberman",
              "Elkhound Norwegian",
              "Entlebucher",
              "Eskimo",
              "Finnish Lapphund",
              "Frise Bichon",
              "Gaddi Indian",
              "Germanshepherd",
              "Greyhound Indian",
              "Greyhound Italian",
              "Groenendael",
              "Havanese",
              "Hound Afghan",
              "Hound Basset",
              "Hound Blood",
              "Hound English",
              "Hound Ibizan",
              "Hound Plott",
              "Hound Walker",
              "Husky",
              "Keeshond",
              "Kelpie",
              "Kombai",
              "Komondor",
              "Kuvasz",
              "Labradoodle",
              "Labrador",
              "Leonberg",
              "Lhasa",
              "Malamute",
              "Malinois",
              "Maltese",
              "Mastiff Bull",
              "Mastiff English",
              "Mastiff Indian",
              "Mastiff Tibetan",
              "Mexicanhairless",
              "Mix",
              "Mountain Bernese",
              "Mountain Swiss",
              "Mudhol Indian",
              "Newfoundland",
              "Otterhound",
              "Ovcharka Caucasian",
              "Papillon",
              "Pariah Indian",
              "Pekinese",
              "Pembroke",
              "Pinscher Miniature",
              "Pitbull",
              "Pointer German",
              "Pointer Germanlonghair",
              "Pomeranian",
              "Poodle Medium",
              "Poodle Miniature",
              "Poodle Standard",
              "Poodle Toy",
              "Pug",
              "Puggle",
              "Pyrenees",
              "Rajapalayam Indian",
              "Redbone",
              "Retriever Chesapeake",
              "Retriever Curly",
              "Retriever Flatcoated",
              "Retriever Golden",
              "Ridgeback Rhodesian",
              "Rottweiler",
              "Saluki",
              "Samoyed",
              "Schipperke",
              "Schnauzer Giant",
              "Schnauzer Miniature",
              "Segugio Italian",
              "Setter English",
              "Setter Gordon",
              "Setter Irish",
              "Sharpei",
              "Sheepdog English",
              "Sheepdog Indian",
              "Sheepdog Shetland",
              "Shiba",
              "Shihtzu",
              "Spaniel Blenheim",
              "Spaniel Brittany",
              "Spaniel Cocker",
              "Spaniel Irish",
              "Spaniel Japanese",
              "Spaniel Sussex",
              "Spaniel Welsh",
              "Spitz Indian",
              "Spitz Japanese",
              "Springer English",
              "Stbernard",
              "Terrier American",
              "Terrier Australian",
              "Terrier Bedlington",
              "Terrier Border",
              "Terrier Cairn",
              "Terrier Dandie",
              "Terrier Fox",
              "Terrier Irish",
              "Terrier Kerryblue",
              "Terrier Lakeland",
              "Terrier Norfolk",
              "Terrier Norwich",
              "Terrier Patterdale",
              "Terrier Russell",
              "Terrier Scottish",
              "Terrier Sealyham",
              "Terrier Silky",
              "Terrier Tibetan",
              "Terrier Toy",
              "Terrier Welsh",
              "Terrier Westhighland",
              "Terrier Wheaten",
              "Terrier Yorkshire",
              "Tervuren",
              "Vizsla",
              "Waterdog Spanish",
              "Weimaraner",
              "Whippet",
              "Wolfhound Irish"
            ]
          }
        }
      },
      "AllBreedsResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "source": {
            "type": "string",
            "example": "cache"
          },
          "count": {
            "type": "integer",
            "example": 162
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "example": "affenpinscher"
                },
                "name": {
                  "type": "string",
                  "example": "affenpinscher"
                },
                "breed": {
                  "type": "string",
                  "example": "affenpinscher"
                },
                "displayName": {
                  "type": "string",
                  "example": "Affenpinscher"
                },
                "subBreed": {
                  "type": "string",
                  "nullable": true,
                  "example": null
                },
                "imageCount": {
                  "type": "integer",
                  "example": 0
                },
                "popularity": {
                  "type": "object",
                  "properties": {
                    "viewCount": {
                      "type": "integer",
                      "example": 0
                    },
                    "favoriteCount": {
                      "type": "integer",
                      "example": 0
                    },
                    "searchCount": {
                      "type": "integer",
                      "example": 0
                    }
                  }
                },
                "lastSync": {
                  "type": "string",
                  "format": "date-time",
                  "example": "2025-07-03T05:19:50.714Z"
                },
                "isActive": {
                  "type": "boolean",
                  "example": true
                }
              }
            },
            "example": [
              {
                "id": "affenpinscher",
                "name": "affenpinscher",
                "breed": "affenpinscher",
                "subBreed": null,
                "displayName": "Affenpinscher",
                "imageCount": 0,
                "popularity": {
                  "viewCount": 0,
                  "favoriteCount": 0,
                  "searchCount": 0
                },
                "lastSync": "2025-07-03T05:19:50.714Z",
                "isActive": true
              },
              {
                "id": "african",
                "name": "african",
                "breed": "african",
                "subBreed": null,
                "displayName": "African",
                "imageCount": 0,
                "popularity": {
                  "viewCount": 0,
                  "favoriteCount": 0,
                  "searchCount": 0
                },
                "lastSync": "2025-07-03T05:19:50.771Z",
                "isActive": true
              },
              {
                "id": "australian-kelpie",
                "name": "australian kelpie",
                "breed": "australian",
                "subBreed": "kelpie",
                "displayName": "Australian Kelpie",
                "imageCount": 0,
                "popularity": {
                  "viewCount": 0,
                  "favoriteCount": 0,
                  "searchCount": 0
                },
                "lastSync": "2025-07-03T05:19:50.989Z",
                "isActive": true
              }
            ]
          },
          "metadata": {
            "type": "object",
            "properties": {
              "lastUpdated": {
                "type": "string",
                "format": "date-time",
                "example": "2025-07-03T05:19:50.714Z"
              },
              "responseTime": {
                "type": "number",
                "example": 4054
              },
              "cached": {
                "type": "boolean",
                "example": true
              }
            }
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "example": "2025-07-04T07:18:41.529Z"
          }
        }
      },
      "DogsResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "count": {
            "type": "integer",
            "example": 1
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Dog"
            }
          }
        }
      },
      "DogResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "data": {
            "$ref": "#/components/schemas/Dog"
          }
        }
      },
      "Dog": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "example": 1
          },
          "name": {
            "type": "string",
            "example": "Maple"
          },
          "breed": {
            "type": "string",
            "example": "Cavoodle"
          },
          "age": {
            "type": "integer",
            "example": 2
          },
          "colour": {
            "type": "string",
            "example": "copper"
          },
          "description": {
            "type": "string",
            "example": "cuddly"
          },
          "imageUrl": {
            "type": "string",
            "example": "https://example.com/maple.jpg"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "CreateDogRequest": {
        "type": "object",
        "required": ["name", "breed"],
        "properties": {
          "name": {
            "type": "string",
            "example": "Maple"
          },
          "breed": {
            "type": "string",
            "example": "Cavoodle"
          },
          "age": {
            "type": "integer",
            "minimum": 0,
            "maximum": 30,
            "example": 2
          },
          "colour": {
            "type": "string",
            "example": "copper"
          },
          "description": {
            "type": "string",
            "maxLength": 1000,
            "example": "cuddly"
          },
          "imageUrl": {
            "type": "string",
            "format": "uri",
            "example": "https://example.com/maple.jpg"
          }
        }
      },
      "UpdateDogRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Maple"
          },
          "breed": {
            "type": "string",
            "example": "Cavoodle"
          },
          "age": {
            "type": "integer",
            "minimum": 0,
            "maximum": 30,
            "example": 2
          },
          "colour": {
            "type": "string",
            "example": "copper"
          },
          "description": {
            "type": "string",
            "maxLength": 1000,
            "example": "yappy"
          },
          "imageUrl": {
            "type": "string",
            "format": "uri",
            "example": "https://example.com/maple.jpg"
          }
        }
      },
      "SearchResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "query": {
            "type": "string",
            "example": "labrador"
          },
          "count": {
            "type": "integer",
            "example": 3
          },
          "results": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "breed": {
                  "type": "string",
                  "example": "labrador"
                },
                "displayName": {
                  "type": "string",
                  "example": "Labrador"
                },
                "relevanceScore": {
                  "type": "number",
                  "example": 0.95
                },
                "popularity": {
                  "type": "integer",
                  "example": 142
                }
              }
            }
          }
        }
      },

      "BreedImagesResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "breed": {
            "type": "string",
            "example": "labrador"
          },
          "count": {
            "type": "integer",
            "example": 3
          },
          "totalAvailable": {
            "type": "integer",
            "example": 156
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "url": {
                  "type": "string",
                  "example": "https://images.dog.ceo/breeds/labrador/n02099712_1234.jpg"
                },
                "verified": {
                  "type": "boolean",
                  "example": true
                }
              }
            },
            "example": [
              {
                "url": "https://images.dog.ceo/breeds/labrador/n02099712_1234.jpg",
                "verified": true
              },
              {
                "url": "https://images.dog.ceo/breeds/labrador/n02099712_5678.jpg",
                "verified": true
              },
              {
                "url": "https://images.dog.ceo/breeds/labrador/n02099712_9012.jpg",
                "verified": true
              }
            ]
          }
        }
      },
      "CacheStatusResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "status": {
            "type": "string",
            "example": "healthy"
          },
          "data": {
            "type": "object",
            "properties": {
              "totalBreeds": {
                "type": "integer",
                "example": 172
              },
              "cachedImages": {
                "type": "integer",
                "example": 8943
              },
              "hitRate": {
                "type": "number",
                "example": 0.89
              },
              "storage": {
                "type": "object",
                "properties": {
                  "size": {
                    "type": "string",
                    "example": "45.2 MB"
                  },
                  "usage": {
                    "type": "string",
                    "example": "12.3%"
                  }
                }
              }
            }
          }
        }
      },
      "SuccessResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "message": {
            "type": "string",
            "example": "Operation completed successfully"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": false
          },
          "error": {
            "type": "string",
            "example": "An error occurred"
          },
          "message": {
            "type": "string",
            "example": "Detailed error message"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "System",
      "description": "System health and monitoring endpoints"
    },
    {
      "name": "Breed Info",
      "description": "External API Data"
    },
    {
      "name": "CRUD Operations",
      "description": "Internal Database"
    }
  ]
}
