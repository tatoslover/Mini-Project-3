{
  "openapi": "3.0.0",
  "info": {
    "title": "Barkend API",
    "version": "1.0.0",
    "description": "üêï **REST API Documentation** - Complete backend system for dog breed management with MongoDB Atlas integration, serverless functions, and comprehensive CRUD operations.\n\n**Backend Architecture:**\n- MongoDB Atlas cloud database\n- Serverless Netlify Functions\n- External API integration\n- Real-time caching\n- Full CRUD operations\n- Analytics and statistics\n\n[View raw JSON](swagger/swagger.json)"
  },
  "servers": [
    {
      "url": "/.netlify/functions",
      "description": "Netlify Functions"
    }
  ],
  "paths": {
    "/health": {
      "get": {
        "summary": "Health Check",
        "description": "Returns the health status of the API server and database connection",
        "tags": ["System"],
        "responses": {
          "200": {
            "description": "Server is healthy",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/HealthResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/stats": {
      "get": {
        "summary": "System Statistics",
        "description": "Returns comprehensive system metrics and performance statistics",
        "tags": ["System"],
        "responses": {
          "200": {
            "description": "System statistics",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/StatsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/cache-status": {
      "get": {
        "summary": "Cache Status",
        "description": "Returns cache performance metrics and storage information",
        "tags": ["System"],
        "responses": {
          "200": {
            "description": "Cache status information",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CacheStatusResponse"
                }
              }
            }
          }
        }
      }
    },
    "/breeds": {
      "get": {
        "summary": "Get All Breeds",
        "description": "Retrieves all available dog breeds with sub-breeds from MongoDB Atlas",
        "tags": ["Breed Info"],
        "responses": {
          "200": {
            "description": "List of all dog breeds",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/BreedsResponse"
                }
              }
            }
          },
          "500": {
            "description": "Server error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/breeds-popular": {
      "get": {
        "summary": "Get Popular Breeds",
        "description": "Returns the most popular dog breeds based on usage analytics",
        "tags": ["Breed Info"],
        "parameters": [
          {
            "name": "limit",
            "in": "query",
            "description": "Number of breeds to return",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 20,
              "default": 10
            }
          },
          {
            "name": "timeframe",
            "in": "query",
            "description": "Time period for popularity calculation",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["today", "week", "month", "all"],
              "default": "week"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Popular breeds list",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PopularBreedsResponse"
                }
              }
            }
          }
        }
      }
    },
    "/random": {
      "get": {
        "summary": "Get Random Breed Images",
        "description": "Returns random images for a specified breed",
        "tags": ["Breed Info"],
        "parameters": [
          {
            "name": "breed",
            "in": "query",
            "description": "The breed name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "count",
            "in": "query",
            "description": "Number of images to return",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 50,
              "default": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Random breed images",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/RandomImagesResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid breed parameter",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/search": {
      "get": {
        "summary": "Search Breeds",
        "description": "Search for dog breeds by name with relevance scoring",
        "tags": ["Breed Info"],
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "description": "Search query",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "description": "Number of results to return",
            "required": false,
            "schema": {
              "type": "integer",
              "minimum": 1,
              "maximum": 50,
              "default": 10
            }
          },
          {
            "name": "sortBy",
            "in": "query",
            "description": "Sort results by",
            "required": false,
            "schema": {
              "type": "string",
              "enum": ["relevance", "name", "popularity"],
              "default": "relevance"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Search results",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SearchResponse"
                }
              }
            }
          },
          "400": {
            "description": "Invalid search query",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/dogs": {
      "get": {
        "summary": "Get All Dogs",
        "description": "Retrieve all dogs from the database",
        "tags": ["CRUD Operations"],
        "responses": {
          "200": {
            "description": "List of all dogs",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DogsResponse"
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Create New Dog",
        "description": "Add a new dog to the database with validation",
        "tags": ["CRUD Operations"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDogRequest"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Dog created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DogResponse"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    },
    "/dogs/{id}": {
      "get": {
        "summary": "Get Dog by ID",
        "description": "Retrieve a specific dog by its ID",
        "tags": ["CRUD Operations"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Dog ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Dog details",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DogResponse"
                }
              }
            }
          },
          "404": {
            "description": "Dog not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "put": {
        "summary": "Update Dog",
        "description": "Update an existing dog's information",
        "tags": ["CRUD Operations"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Dog ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDogRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Dog updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DogResponse"
                }
              }
            }
          },
          "404": {
            "description": "Dog not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          },
          "400": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete Dog",
        "description": "Remove a dog from the database",
        "tags": ["CRUD Operations"],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Dog ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Dog deleted successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SuccessResponse"
                }
              }
            }
          },
          "404": {
            "description": "Dog not found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrorResponse"
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "HealthResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "status": {
            "type": "string",
            "example": "healthy"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          },
          "database": {
            "type": "string",
            "example": "connected"
          },
          "uptime": {
            "type": "number",
            "example": 3600
          }
        }
      },
      "StatsResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "data": {
            "type": "object",
            "properties": {
              "imagesServed": {
                "type": "integer",
                "example": 15427
              },
              "breedsViewed": {
                "type": "integer",
                "example": 172
              },
              "apiRequests": {
                "type": "integer",
                "example": 8945
              },
              "averageResponseTime": {
                "type": "number",
                "example": 245.6
              }
            }
          }
        }
      },
      "BreedsResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "count": {
            "type": "integer",
            "example": 172
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "example": "affenpinscher"
                },
                "name": {
                  "type": "string",
                  "example": "affenpinscher"
                },
                "breed": {
                  "type": "string",
                  "example": "affenpinscher"
                },
                "displayName": {
                  "type": "string",
                  "example": "Affenpinscher"
                },
                "subBreed": {
                  "type": "string",
                  "nullable": true,
                  "example": null
                },
                "imageCount": {
                  "type": "integer",
                  "example": 15
                }
              }
            }
          }
        }
      },
      "DogsResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "count": {
            "type": "integer",
            "example": 5
          },
          "data": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Dog"
            }
          }
        }
      },
      "DogResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "data": {
            "$ref": "#/components/schemas/Dog"
          }
        }
      },
      "Dog": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "example": "1"
          },
          "name": {
            "type": "string",
            "example": "Maple"
          },
          "breed": {
            "type": "string",
            "example": "Cavoodle"
          },
          "age": {
            "type": "integer",
            "example": 2
          },
          "color": {
            "type": "string",
            "example": "copper"
          },
          "description": {
            "type": "string",
            "example": "cuddly"
          },
          "imageUrl": {
            "type": "string",
            "example": "https://example.com/maple.jpg"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "CreateDogRequest": {
        "type": "object",
        "required": ["name", "breed"],
        "properties": {
          "name": {
            "type": "string",
            "example": "Maple"
          },
          "breed": {
            "type": "string",
            "example": "Cavoodle"
          },
          "age": {
            "type": "integer",
            "minimum": 0,
            "maximum": 30,
            "example": 2
          },
          "color": {
            "type": "string",
            "example": "copper"
          },
          "description": {
            "type": "string",
            "maxLength": 1000,
            "example": "cuddly"
          },
          "imageUrl": {
            "type": "string",
            "format": "uri",
            "example": "https://example.com/maple.jpg"
          }
        }
      },
      "UpdateDogRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "example": "Maple"
          },
          "breed": {
            "type": "string",
            "example": "Cavoodle"
          },
          "age": {
            "type": "integer",
            "minimum": 0,
            "maximum": 30,
            "example": 2
          },
          "color": {
            "type": "string",
            "example": "copper"
          },
          "description": {
            "type": "string",
            "maxLength": 1000,
            "example": "yappy"
          },
          "imageUrl": {
            "type": "string",
            "format": "uri",
            "example": "https://example.com/maple.jpg"
          }
        }
      },
      "SearchResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "query": {
            "type": "string",
            "example": "labrador"
          },
          "count": {
            "type": "integer",
            "example": 3
          },
          "results": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "breed": {
                  "type": "string",
                  "example": "labrador"
                },
                "displayName": {
                  "type": "string",
                  "example": "Labrador"
                },
                "relevanceScore": {
                  "type": "number",
                  "example": 0.95
                },
                "popularity": {
                  "type": "integer",
                  "example": 142
                }
              }
            }
          }
        }
      },
      "PopularBreedsResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "timeframe": {
            "type": "string",
            "example": "week"
          },
          "count": {
            "type": "integer",
            "example": 10
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "rank": {
                  "type": "integer",
                  "example": 1
                },
                "breed": {
                  "type": "string",
                  "example": "labrador"
                },
                "displayName": {
                  "type": "string",
                  "example": "Labrador"
                },
                "viewCount": {
                  "type": "integer",
                  "example": 142
                },
                "popularityScore": {
                  "type": "number",
                  "example": 0.95
                },
                "trendingUp": {
                  "type": "boolean",
                  "example": true
                }
              }
            }
          }
        }
      },
      "RandomImagesResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "breed": {
            "type": "string",
            "example": "labrador"
          },
          "count": {
            "type": "integer",
            "example": 3
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "properties": {
                "url": {
                  "type": "string",
                  "example": "https://images.dog.ceo/breeds/labrador/n02099712_1234.jpg"
                },
                "verified": {
                  "type": "boolean",
                  "example": true
                }
              }
            }
          }
        }
      },
      "CacheStatusResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "status": {
            "type": "string",
            "example": "healthy"
          },
          "data": {
            "type": "object",
            "properties": {
              "totalBreeds": {
                "type": "integer",
                "example": 172
              },
              "cachedImages": {
                "type": "integer",
                "example": 8943
              },
              "hitRate": {
                "type": "number",
                "example": 0.89
              },
              "storage": {
                "type": "object",
                "properties": {
                  "size": {
                    "type": "string",
                    "example": "45.2 MB"
                  },
                  "usage": {
                    "type": "string",
                    "example": "12.3%"
                  }
                }
              }
            }
          }
        }
      },
      "SuccessResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": true
          },
          "message": {
            "type": "string",
            "example": "Operation completed successfully"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "ErrorResponse": {
        "type": "object",
        "properties": {
          "success": {
            "type": "boolean",
            "example": false
          },
          "error": {
            "type": "string",
            "example": "An error occurred"
          },
          "message": {
            "type": "string",
            "example": "Detailed error message"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time"
          }
        }
      }
    }
  },
  "tags": [
    {
      "name": "System",
      "description": "System health and monitoring endpoints"
    },
    {
      "name": "Breed Info",
      "description": "Dog breed information and search endpoints"
    },
    {
      "name": "CRUD Operations",
      "description": "Create, Read, Update, Delete operations for dogs"
    }
  ]
}
